package interview.study.algorithm;

import java.util.Scanner;

public class WhiteBoilWaterInterviewQ {

    public static void main(String[] args) {
        getLowestPrice();
    }

    /*
        美团面试题2024年秋招；
        第一题，买菜折扣问题
     */
    static void getLowestPrice(){
        try{
            // 定义输入的菜的种数；
            int lines;
            // 从第二行开始输入菜的原价和折扣价
            int b,c;
            // 定义一下满减的原价和折扣价格；
            int d = 0,e = 0;

            Scanner in = new Scanner(System.in);
            lines = in.nextInt();
            in.nextLine(); // 清除换行符
            while(in.hasNextInt()) {
                for (int i = 1; i < lines; i++) {
                    // 获得输入价格
                    b = in.nextInt();// 原价格
                    c = in.nextInt();// 折扣价

                    // 判断原价是要大于折扣价格的
                    if (b <= c) {
                        System.out.println("原价必须大于折扣价");
                        return;
                    }
                    // 如何获取总的原价和总的折扣价；
                    b += b;
                    c += c;
                    // 最后一行是满减的价格和折扣价格
                    if (i == lines - 1) {
                        d = in.nextInt();
                        e = in.nextInt();
                        if (d < e) {
                            System.out.println("满减的价格必须大于折扣价！");
                            return;
                        }
                    }
                    // 判断是否达到满减价格
                    if (b >= d) {
                        // 再判断满减的价格大约折扣价
                        if (e >= c) {
                            // 输出最后报价
                            System.out.println(d - e + "");
                            return;
                        } else {
                            System.out.println(c + "");
                            return;
                        }
                    } else {
                        System.out.println(c + "");
                        return;
                    }
                }
            }

        }catch (Exception e){
            System.out.println("error"+e.toString());
        }
        return ;
    }


    /*
    2、小美的字符串匹配度
    输入描述：
            第一行输入一个整数n(2 \leq n \leq 1000)
            第二行输入一个长度为n的字符串s。
            第三行输入一个长度为n的字符串t。
            输出描述：
            输出一个整数，s和t的最大匹配度。
    示例1
            输入例子：
                5
            ababc
            babac
            输出例子：
                3
     */



    /*
    3、小美的树上染色
        第一行输入一个正整数n，代表节点的数量。
        第二行输入n个正整数a_i，代表每个节点的权值。
        接下来的n-1行，每行输入两个正整数u,v，代表节点u和节点v有一条边连接。
        1\leq n \leq 10^5
        1\leq a_i \leq 10^9
        1\leq u,v \leq n
        输出描述：
        输出一个整数，表示最多可以染红的节点数量。
        示例1
        输入例子：
3
3 3 12
1 2
2 3
输出例子：
2
例子说明：
可以染红第二个和第三个节点。
请注意，此时不能再染红第一个和第二个节点，因为第二个节点已经被染红。
因此，最多染红 2 个节点。
     */


        /*
4.
小美的排列询问
小美拿到了一个排列。她想知道在这个排列中，

x和

y是否是相邻的。你能帮帮她吗？

排列是指一个长度为

n的数组，其中 1 到

n每个元素恰好出现一次。
时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 256M，其他语言512M
输入描述：
第一行输入一个正整数n，代表排列的长度。
第二行输入n个正整数a_i，代表排列的元素。
第三行输入两个正整数x和y，用空格隔开。
1\leq n \leq 200000
1\leq a_i,x,y \leq n
保证x≠y
输出描述：
如果x和y在排列中相邻，则输出"Yes"。否则输出"No"。
示例1
输入例子：
4
1 4 2 3
2 4
输出例子：
Yes
示例2
输入例子：
5
3 4 5 1 2
3 2
输出例子：
No
     */


    /*
5.
小美的排列构造
小美定义一个数组

a的权值计算如下：
首先将

a的每一对相邻两项求和，得到一个

b数组。那么

b数组的最大值减最小值即为

a数组的权值。
例如，若

=
[
2
,
1
,
3
]
a=[2,1,3]，那么

=
[
3
,
4
]
b=[3,4]，

b数组的极差是1。因此

a数组的权值为1。
现在小美希望你能构造一个长度为

n的排列，满足权值尽可能小。你能帮帮她吗？

排列是指一个长度为

n的数组，其中 1 到

n每个元素恰好出现一次。
时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 256M，其他语言512M
输入描述：
一个正整数n，代表排列的长度。
2\leq n \leq 200000
输出描述：
一个合法的排列。如果有多解输出任意即可。
示例1
输入例子：
3
输出例子：
2 1 3
例子说明：
这个数组的权值为 1。输出[2,3,1]等排列也是合法的。
     */

    /*
6.
小美走公路
有一个环形的公路，上面共有

n站，现在给定了顺时针第

i站到第

+
1
i+1站之间的距离（特殊的，也给出了第

n站到第 1 站的距离）。小美想沿着公路第

x站走到第

y站，她想知道最短的距离是多少？
时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 256M，其他语言512M
输入描述：
第一行输入一个正整数n，代表站的数量。
第二行输入n个正整数a_i，前n-1个数代表顺时针沿着公路走，i站到第i+1站之间的距离；最后一个正整数代表顺时针沿着公路走，第n站到第 1 站的距离。·
第三行输入两个正整数x和y，代表小美的出发地和目的地。
1\leq n \leq 10^5
1\leq a_i \leq 10^9
1\leq x,y \leq n
输出描述：
一个正整数，代表小美走的最短距离。
示例1
输入例子：
3
1 2 2
2 3
输出例子：
2
示例2
输入例子：
3
1 2 2
1 3
输出例子：
2
     */




    /*
7.
小美的好矩阵
小美定义一个矩阵是好矩阵，当且仅当该矩阵满足：
1. 矩阵仅由'A'、'B'、'C'三种字符组成。且三种字符都出现过。
2. 矩阵相邻的字符都不相等。

现在给定一个

n∗m的矩阵，小美想知道有多少个3*3的子矩阵是好矩阵，你能帮帮她吗？
时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 256M，其他语言512M
输入描述：
第一行输入两个整数n,m，代表矩阵的行数和列数。
接下来的n行，每行输入一个仅包含大写字母的长度为m的字符串。
1\leq n,m \leq 1000
输出描述：
输出一个整数表示答案。
示例1
输入例子：
4 4
DABC
ABAB
BABA
BBAB
输出例子：
1
例子说明：
有4个3*3的子矩阵。
左上角的子矩阵出现了'D'，因此不合法。
右上角的是好矩阵。
左下角的存在两个相邻的字母相同，因此不合法。
右下角的子矩阵里没有'C'，因此不合法。
     */

    /*
8.
小美的蛋糕切割
小美有一个矩形的蛋糕，共分成了

n 行

m 列，共

×

n×m 个区域，每个区域是一个小正方形，已知蛋糕每个区域都有一个美味度。她想切一刀把蛋糕切成两部分，自己吃一部分，小团吃另一部分。

小美希望两个人吃的部分的美味度之和尽可能接近，请你输出
∣

1
−

2
∣
∣s
1

 −s
2

 ∣的最小值。（其中

1
s
1

 代表小美吃的美味度，

2
s
2

 代表小团吃的美味度）。

请务必保证，切下来的区域都是完整的，即不能把某个小正方形切成两个小区域。


时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 256M，其他语言512M
输入描述：
第一行输出两个正整数 n 和 m ，代表蛋糕区域的行数和列数。
接下来的 n 行，每行输入 m 个正整数 a_{ij} ，用来表示每个区域的美味度。
1\leq n,m \leq 10^3
1\leq a_{ij} \leq 10^4
输出描述：
一个整数，代表 |s_1-s_2| 的最小值。
示例1
输入例子：
2 3
1 1 4
5 1 4
输出例子：
0
例子说明：
把蛋糕像这样切开：
1 1 | 4
5 1 | 4
左边蛋糕美味度之和是8
右边蛋糕美味度之和是8
所以答案是0。

     */


    /*
9.
小美的字符串变换
小美拿到了一个长度为

n的字符串，她希望将字符串从左到右平铺成一个矩阵（先平铺第一行，然后是第二行，以此类推，矩阵有

x行

y列，必须保证

∗

=

x∗y=n，即每

y个字符换行，共

x行）。

该矩阵的权值定义为这个矩阵的连通块数量。小美希望最终矩阵的权值尽可能小，你能帮小美求出这个最小权值吗？

注：我们定义，上下左右四个方向相邻的相同字符是连通的。
时间限制：C/C++ 1秒，其他语言2秒
空间限制：C/C++ 256M，其他语言512M
输入描述：
第一行输入一个正整数n，代表字符串的长度。
第二行输入一个长度为n的、仅由小写字母组成的字符串。
1\leq n \leq 10^4
输出描述：
输出一个整数表示最小权值。
示例1
输入例子：
9
aababbabb
输出例子：
2
例子说明：
平铺为3*3的矩阵：
aab
abb
abb
共有2个连通块，4个a和5个b。


     */

}
